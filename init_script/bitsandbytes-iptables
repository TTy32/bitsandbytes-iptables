#!/bin/sh

### BEGIN INIT INFO
# Provides:          bitsandbytes-iptables
# Required-Start:    bitsandbytes-iptables
# Required-Stop:     bitsandbytes-iptables
# Should-Start:      bitsandbytes-iptables
# Should-Stop:       bitsandbytes-iptables
# X-Start-Before:    bitsandbytes-iptables
# X-Stop-After:      bitsandbytes-iptables
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# X-Interactive:     true
# Short-Description: single_line_description
# Description:       multiline_description
### END INIT INFO

# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin
PREFIX="/etc/bitsandbytes-iptables"
PREFIX_BB=$PREFIX/bb
PREFIX_PROCESSING=$PREFIX/processing
BB="bb-iptables_run.sh"
PROCESSING="run.php"
DAEMON_BB=$PREFIX_BB/$BB
DAEMON_PROCESSING=$PREFIX_PROCESSING/$PROCESSING
SCRIPTNAME=/etc/init.d/$NAME


# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
# and status_of_proc is working.
. /lib/lsb/init-functions

#
# Function that starts the daemon/service
#

do_start()
{
	start-stop-daemon -d $PREFIX_PROCESSING --start --exec $DAEMON_PROCESSING
	start-stop-daemon -d $PREFIX_BB --start --exec $DAEMON_BB
}

#
# Function that stops the daemon/service
#
do_stop()
{
	iptables -F
	iptables -X
	iptables -P INPUT DROP
	iptables -P OUTPUT DROP
	iptables -P FORWARD DROP
}

#
# Function that sends a SIGHUP to the daemon/service
	do_stop
	do_start

case "$1" in
  start)
	[ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
	do_start
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
  stop)
	[ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
	do_stop
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
  status)
       status_of_proc "$DAEMON" "$NAME" && exit 0 || exit $?
       ;;
  #reload|force-reload)
	#
	# If do_reload() is not implemented then leave this commented out
	# and leave 'force-reload' as an alias for 'restart'.
	#
	#log_daemon_msg "Reloading $DESC" "$NAME"
	#do_reload
	#log_end_msg $?
	#;;
  restart|force-reload)
	#
	# If the "reload" option is implemented then remove the
	# 'force-reload' alias
	#
	log_daemon_msg "Restarting $DESC" "$NAME"
	do_stop
	case "$?" in
	  0|1)
		do_start
		case "$?" in
			0) log_end_msg 0 ;;
			1) log_end_msg 1 ;; # Old process is still running
			*) log_end_msg 1 ;; # Failed to start
		esac
		;;
	  *)
	  	# Failed to stop
		log_end_msg 1
		;;
	esac
	;;
  *)
	#echo "Usage: $SCRIPTNAME {start|stop|restart|reload|force-reload}" >&2
	echo "Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}" >&2
	exit 3
	;;
esac

:
